apiVersion: apps/v1
kind: Deployment
metadata:
  name:  neo4j-db
  namespace: default
  labels:
    app:  neo4j-db
spec:
  selector:
    matchLabels:
      app: neo4j-db
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  neo4j-db
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  neo4j-db
        image:  bitnami/neo4j
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /_status/healthz
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: neo4j-db
              key: DB_HOST
        ports:
        - containerPort:  7474
          name:  http
        - containerPort:  7678
          name:  bolt
        - containerPort:  7473
          name:  https
        volumeMounts:
        - name: neo4j-data
          mountPath: "/var/lib/neo4j/data"
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
      restartPolicy: Always